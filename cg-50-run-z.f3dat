;kinematic initial and boundary conditions, including erosion
;
;______________________________________________________________________________________________
;
; prescribe velocities
;
;set velocity of lower part of model, below a plane dipping in the x direction
;
zone gridpoint initialize displacement-x 0.0
zone gridpoint initialize displacement-y 0.0
zone gridpoint initialize displacement-z 0.0
zone gridpoint initialize velocity-x 0.0
zone gridpoint initialize velocity-y 0.0
zone gridpoint initialize velocity-z 0.0
zone gridpoint fix velocity-y range position-x @xedgemin @xedgemax
zone gridpoint fix velocity-y range position-x -100 100
zone gridpoint fix velocity-y range position-y -100 100
zone gridpoint fix velocity-y range position-y @yedgemin @yedgemax
;fix z range x 500100 @extentx z -100 100 
;
;
;
;set initial velocities
;
;ini xvel=@initxvel grad -0.000002 0.0 0.0 range x -100 @extentx
zone gridpoint initialize velocity-x @initxvel range position-x -100 500100
zone gridpoint initialize velocity-z 0 gradient -0.0000005 0.0 0.0 range named-range 'slab1'
;
;
;fix the slab bottom and back edge
zone gridpoint fix velocity-x range position-x -100 100
;fix x,z ra slab1
;zone gridpoint fix velocity-x range position-x 0 500100 position-z -100 100
;zone gridpoint fix velocity-z range position-x 0 500100 position-z -100 100
;
;
;=============================
;Jeff's lines
;fix x,y,z range x=-10,500000 ; 
;
;INI XV=2.0 RANGE X=-10,500000
;
;ini zv=0 grad=-.0000005 0 0 ra x=220000,500000 
;
;fix y range x=999900 1000100
;
;pl se pla di=90 dd=0
;pl ssr
;pl vel
;=============================
;
;
;
; do erosion (m/timestep)
fish define erode_region
whilestepping
count2 = 1
loop while count2 <= gpno
  gpn = region_erode(count2)
  gp.pos.z(gpn) = gp.pos.z(gpn) - erosionrate
  count2 = count2 + 1
end_loop

end
;
@erode_region
;
;
;